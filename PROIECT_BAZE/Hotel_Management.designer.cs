#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PROIECT_BAZE
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Hotel_Management")]
	public partial class Hotel_ManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAchizitii(Achizitii instance);
    partial void UpdateAchizitii(Achizitii instance);
    partial void DeleteAchizitii(Achizitii instance);
    partial void InsertAngajati(Angajati instance);
    partial void UpdateAngajati(Angajati instance);
    partial void DeleteAngajati(Angajati instance);
    partial void InsertCamere(Camere instance);
    partial void UpdateCamere(Camere instance);
    partial void DeleteCamere(Camere instance);
    partial void InsertClienti(Clienti instance);
    partial void UpdateClienti(Clienti instance);
    partial void DeleteClienti(Clienti instance);
    partial void InsertControale_Calitate(Controale_Calitate instance);
    partial void UpdateControale_Calitate(Controale_Calitate instance);
    partial void DeleteControale_Calitate(Controale_Calitate instance);
    partial void InsertDetalii_Achizitie(Detalii_Achizitie instance);
    partial void UpdateDetalii_Achizitie(Detalii_Achizitie instance);
    partial void DeleteDetalii_Achizitie(Detalii_Achizitie instance);
    partial void InsertFunctii(Functii instance);
    partial void UpdateFunctii(Functii instance);
    partial void DeleteFunctii(Functii instance);
    partial void InsertFurnizori(Furnizori instance);
    partial void UpdateFurnizori(Furnizori instance);
    partial void DeleteFurnizori(Furnizori instance);
    partial void InsertPlati(Plati instance);
    partial void UpdatePlati(Plati instance);
    partial void DeletePlati(Plati instance);
    partial void InsertProduse(Produse instance);
    partial void UpdateProduse(Produse instance);
    partial void DeleteProduse(Produse instance);
    partial void InsertRapoarte(Rapoarte instance);
    partial void UpdateRapoarte(Rapoarte instance);
    partial void DeleteRapoarte(Rapoarte instance);
    partial void InsertRecenzii(Recenzii instance);
    partial void UpdateRecenzii(Recenzii instance);
    partial void DeleteRecenzii(Recenzii instance);
    partial void InsertRezervari(Rezervari instance);
    partial void UpdateRezervari(Rezervari instance);
    partial void DeleteRezervari(Rezervari instance);
    partial void InsertRezervari_Camere(Rezervari_Camere instance);
    partial void UpdateRezervari_Camere(Rezervari_Camere instance);
    partial void DeleteRezervari_Camere(Rezervari_Camere instance);
    #endregion
		
		public Hotel_ManagementDataContext() : 
				base(global::PROIECT_BAZE.Properties.Settings.Default.Hotel_ManagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Hotel_ManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Hotel_ManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Hotel_ManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Hotel_ManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Achizitii> Achizitiis
		{
			get
			{
				return this.GetTable<Achizitii>();
			}
		}
		
		public System.Data.Linq.Table<Angajati> Angajatis
		{
			get
			{
				return this.GetTable<Angajati>();
			}
		}
		
		public System.Data.Linq.Table<Camere> Cameres
		{
			get
			{
				return this.GetTable<Camere>();
			}
		}
		
		public System.Data.Linq.Table<Clienti> Clientis
		{
			get
			{
				return this.GetTable<Clienti>();
			}
		}
		
		public System.Data.Linq.Table<Controale_Calitate> Controale_Calitates
		{
			get
			{
				return this.GetTable<Controale_Calitate>();
			}
		}
		
		public System.Data.Linq.Table<Detalii_Achizitie> Detalii_Achizities
		{
			get
			{
				return this.GetTable<Detalii_Achizitie>();
			}
		}
		
		public System.Data.Linq.Table<Functii> Functiis
		{
			get
			{
				return this.GetTable<Functii>();
			}
		}
		
		public System.Data.Linq.Table<Furnizori> Furnizoris
		{
			get
			{
				return this.GetTable<Furnizori>();
			}
		}
		
		public System.Data.Linq.Table<Plati> Platis
		{
			get
			{
				return this.GetTable<Plati>();
			}
		}
		
		public System.Data.Linq.Table<Produse> Produses
		{
			get
			{
				return this.GetTable<Produse>();
			}
		}
		
		public System.Data.Linq.Table<Rapoarte> Rapoartes
		{
			get
			{
				return this.GetTable<Rapoarte>();
			}
		}
		
		public System.Data.Linq.Table<Recenzii> Recenziis
		{
			get
			{
				return this.GetTable<Recenzii>();
			}
		}
		
		public System.Data.Linq.Table<Rezervari> Rezervaris
		{
			get
			{
				return this.GetTable<Rezervari>();
			}
		}
		
		public System.Data.Linq.Table<Rezervari_Camere> Rezervari_Cameres
		{
			get
			{
				return this.GetTable<Rezervari_Camere>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Achizitii")]
	public partial class Achizitii : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Achizitie;
		
		private System.Nullable<int> _ID_Detalii_Achizitie;
		
		private System.Nullable<int> _ID_Angajat;
		
		private System.Nullable<System.DateTime> _Data_Achizitiei;
		
		private EntityRef<Angajati> _Angajati;
		
		private EntityRef<Detalii_Achizitie> _Detalii_Achizitie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AchizitieChanging(int value);
    partial void OnID_AchizitieChanged();
    partial void OnID_Detalii_AchizitieChanging(System.Nullable<int> value);
    partial void OnID_Detalii_AchizitieChanged();
    partial void OnID_AngajatChanging(System.Nullable<int> value);
    partial void OnID_AngajatChanged();
    partial void OnData_AchizitieiChanging(System.Nullable<System.DateTime> value);
    partial void OnData_AchizitieiChanged();
    #endregion
		
		public Achizitii()
		{
			this._Angajati = default(EntityRef<Angajati>);
			this._Detalii_Achizitie = default(EntityRef<Detalii_Achizitie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Achizitie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Achizitie
		{
			get
			{
				return this._ID_Achizitie;
			}
			set
			{
				if ((this._ID_Achizitie != value))
				{
					this.OnID_AchizitieChanging(value);
					this.SendPropertyChanging();
					this._ID_Achizitie = value;
					this.SendPropertyChanged("ID_Achizitie");
					this.OnID_AchizitieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Detalii_Achizitie", DbType="Int")]
		public System.Nullable<int> ID_Detalii_Achizitie
		{
			get
			{
				return this._ID_Detalii_Achizitie;
			}
			set
			{
				if ((this._ID_Detalii_Achizitie != value))
				{
					if (this._Detalii_Achizitie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Detalii_AchizitieChanging(value);
					this.SendPropertyChanging();
					this._ID_Detalii_Achizitie = value;
					this.SendPropertyChanged("ID_Detalii_Achizitie");
					this.OnID_Detalii_AchizitieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Angajat", DbType="Int")]
		public System.Nullable<int> ID_Angajat
		{
			get
			{
				return this._ID_Angajat;
			}
			set
			{
				if ((this._ID_Angajat != value))
				{
					if (this._Angajati.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AngajatChanging(value);
					this.SendPropertyChanging();
					this._ID_Angajat = value;
					this.SendPropertyChanged("ID_Angajat");
					this.OnID_AngajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Achizitiei", DbType="Date")]
		public System.Nullable<System.DateTime> Data_Achizitiei
		{
			get
			{
				return this._Data_Achizitiei;
			}
			set
			{
				if ((this._Data_Achizitiei != value))
				{
					this.OnData_AchizitieiChanging(value);
					this.SendPropertyChanging();
					this._Data_Achizitiei = value;
					this.SendPropertyChanged("Data_Achizitiei");
					this.OnData_AchizitieiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajati_Achizitii", Storage="_Angajati", ThisKey="ID_Angajat", OtherKey="ID_Angajat", IsForeignKey=true)]
		public Angajati Angajati
		{
			get
			{
				return this._Angajati.Entity;
			}
			set
			{
				Angajati previousValue = this._Angajati.Entity;
				if (((previousValue != value) 
							|| (this._Angajati.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajati.Entity = null;
						previousValue.Achizitiis.Remove(this);
					}
					this._Angajati.Entity = value;
					if ((value != null))
					{
						value.Achizitiis.Add(this);
						this._ID_Angajat = value.ID_Angajat;
					}
					else
					{
						this._ID_Angajat = default(Nullable<int>);
					}
					this.SendPropertyChanged("Angajati");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Detalii_Achizitie_Achizitii", Storage="_Detalii_Achizitie", ThisKey="ID_Detalii_Achizitie", OtherKey="ID", IsForeignKey=true)]
		public Detalii_Achizitie Detalii_Achizitie
		{
			get
			{
				return this._Detalii_Achizitie.Entity;
			}
			set
			{
				Detalii_Achizitie previousValue = this._Detalii_Achizitie.Entity;
				if (((previousValue != value) 
							|| (this._Detalii_Achizitie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Detalii_Achizitie.Entity = null;
						previousValue.Achizitiis.Remove(this);
					}
					this._Detalii_Achizitie.Entity = value;
					if ((value != null))
					{
						value.Achizitiis.Add(this);
						this._ID_Detalii_Achizitie = value.ID;
					}
					else
					{
						this._ID_Detalii_Achizitie = default(Nullable<int>);
					}
					this.SendPropertyChanged("Detalii_Achizitie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Angajati")]
	public partial class Angajati : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Angajat;
		
		private string _Nume;
		
		private System.Nullable<int> _Varsta;
		
		private System.Nullable<int> _ID_Functie;
		
		private EntitySet<Achizitii> _Achizitiis;
		
		private EntitySet<Plati> _Platis;
		
		private EntitySet<Rapoarte> _Rapoartes;
		
		private EntityRef<Functii> _Functii;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AngajatChanging(int value);
    partial void OnID_AngajatChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnVarstaChanging(System.Nullable<int> value);
    partial void OnVarstaChanged();
    partial void OnID_FunctieChanging(System.Nullable<int> value);
    partial void OnID_FunctieChanged();
    #endregion
		
		public Angajati()
		{
			this._Achizitiis = new EntitySet<Achizitii>(new Action<Achizitii>(this.attach_Achizitiis), new Action<Achizitii>(this.detach_Achizitiis));
			this._Platis = new EntitySet<Plati>(new Action<Plati>(this.attach_Platis), new Action<Plati>(this.detach_Platis));
			this._Rapoartes = new EntitySet<Rapoarte>(new Action<Rapoarte>(this.attach_Rapoartes), new Action<Rapoarte>(this.detach_Rapoartes));
			this._Functii = default(EntityRef<Functii>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Angajat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Angajat
		{
			get
			{
				return this._ID_Angajat;
			}
			set
			{
				if ((this._ID_Angajat != value))
				{
					this.OnID_AngajatChanging(value);
					this.SendPropertyChanging();
					this._ID_Angajat = value;
					this.SendPropertyChanged("ID_Angajat");
					this.OnID_AngajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="VarChar(50)")]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Varsta", DbType="Int")]
		public System.Nullable<int> Varsta
		{
			get
			{
				return this._Varsta;
			}
			set
			{
				if ((this._Varsta != value))
				{
					this.OnVarstaChanging(value);
					this.SendPropertyChanging();
					this._Varsta = value;
					this.SendPropertyChanged("Varsta");
					this.OnVarstaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Functie", DbType="Int")]
		public System.Nullable<int> ID_Functie
		{
			get
			{
				return this._ID_Functie;
			}
			set
			{
				if ((this._ID_Functie != value))
				{
					if (this._Functii.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_FunctieChanging(value);
					this.SendPropertyChanging();
					this._ID_Functie = value;
					this.SendPropertyChanged("ID_Functie");
					this.OnID_FunctieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajati_Achizitii", Storage="_Achizitiis", ThisKey="ID_Angajat", OtherKey="ID_Angajat")]
		public EntitySet<Achizitii> Achizitiis
		{
			get
			{
				return this._Achizitiis;
			}
			set
			{
				this._Achizitiis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajati_Plati", Storage="_Platis", ThisKey="ID_Angajat", OtherKey="ID_Angajat")]
		public EntitySet<Plati> Platis
		{
			get
			{
				return this._Platis;
			}
			set
			{
				this._Platis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajati_Rapoarte", Storage="_Rapoartes", ThisKey="ID_Angajat", OtherKey="ID_Angajat")]
		public EntitySet<Rapoarte> Rapoartes
		{
			get
			{
				return this._Rapoartes;
			}
			set
			{
				this._Rapoartes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Functii_Angajati", Storage="_Functii", ThisKey="ID_Functie", OtherKey="ID_Functie", IsForeignKey=true)]
		public Functii Functii
		{
			get
			{
				return this._Functii.Entity;
			}
			set
			{
				Functii previousValue = this._Functii.Entity;
				if (((previousValue != value) 
							|| (this._Functii.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Functii.Entity = null;
						previousValue.Angajatis.Remove(this);
					}
					this._Functii.Entity = value;
					if ((value != null))
					{
						value.Angajatis.Add(this);
						this._ID_Functie = value.ID_Functie;
					}
					else
					{
						this._ID_Functie = default(Nullable<int>);
					}
					this.SendPropertyChanged("Functii");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Achizitiis(Achizitii entity)
		{
			this.SendPropertyChanging();
			entity.Angajati = this;
		}
		
		private void detach_Achizitiis(Achizitii entity)
		{
			this.SendPropertyChanging();
			entity.Angajati = null;
		}
		
		private void attach_Platis(Plati entity)
		{
			this.SendPropertyChanging();
			entity.Angajati = this;
		}
		
		private void detach_Platis(Plati entity)
		{
			this.SendPropertyChanging();
			entity.Angajati = null;
		}
		
		private void attach_Rapoartes(Rapoarte entity)
		{
			this.SendPropertyChanging();
			entity.Angajati = this;
		}
		
		private void detach_Rapoartes(Rapoarte entity)
		{
			this.SendPropertyChanging();
			entity.Angajati = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Camere")]
	public partial class Camere : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Camera;
		
		private System.Nullable<int> _Nr_Camera;
		
		private string _Tip_Camera;
		
		private System.Nullable<int> _Nr_Max_Persoane;
		
		private System.Nullable<decimal> _Pret_Noapte;
		
		private EntitySet<Rezervari_Camere> _Rezervari_Cameres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CameraChanging(int value);
    partial void OnID_CameraChanged();
    partial void OnNr_CameraChanging(System.Nullable<int> value);
    partial void OnNr_CameraChanged();
    partial void OnTip_CameraChanging(string value);
    partial void OnTip_CameraChanged();
    partial void OnNr_Max_PersoaneChanging(System.Nullable<int> value);
    partial void OnNr_Max_PersoaneChanged();
    partial void OnPret_NoapteChanging(System.Nullable<decimal> value);
    partial void OnPret_NoapteChanged();
    #endregion
		
		public Camere()
		{
			this._Rezervari_Cameres = new EntitySet<Rezervari_Camere>(new Action<Rezervari_Camere>(this.attach_Rezervari_Cameres), new Action<Rezervari_Camere>(this.detach_Rezervari_Cameres));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Camera", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Camera
		{
			get
			{
				return this._ID_Camera;
			}
			set
			{
				if ((this._ID_Camera != value))
				{
					this.OnID_CameraChanging(value);
					this.SendPropertyChanging();
					this._ID_Camera = value;
					this.SendPropertyChanged("ID_Camera");
					this.OnID_CameraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_Camera", DbType="Int")]
		public System.Nullable<int> Nr_Camera
		{
			get
			{
				return this._Nr_Camera;
			}
			set
			{
				if ((this._Nr_Camera != value))
				{
					this.OnNr_CameraChanging(value);
					this.SendPropertyChanging();
					this._Nr_Camera = value;
					this.SendPropertyChanged("Nr_Camera");
					this.OnNr_CameraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tip_Camera", DbType="VarChar(50)")]
		public string Tip_Camera
		{
			get
			{
				return this._Tip_Camera;
			}
			set
			{
				if ((this._Tip_Camera != value))
				{
					this.OnTip_CameraChanging(value);
					this.SendPropertyChanging();
					this._Tip_Camera = value;
					this.SendPropertyChanged("Tip_Camera");
					this.OnTip_CameraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_Max_Persoane", DbType="Int")]
		public System.Nullable<int> Nr_Max_Persoane
		{
			get
			{
				return this._Nr_Max_Persoane;
			}
			set
			{
				if ((this._Nr_Max_Persoane != value))
				{
					this.OnNr_Max_PersoaneChanging(value);
					this.SendPropertyChanging();
					this._Nr_Max_Persoane = value;
					this.SendPropertyChanged("Nr_Max_Persoane");
					this.OnNr_Max_PersoaneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pret_Noapte", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Pret_Noapte
		{
			get
			{
				return this._Pret_Noapte;
			}
			set
			{
				if ((this._Pret_Noapte != value))
				{
					this.OnPret_NoapteChanging(value);
					this.SendPropertyChanging();
					this._Pret_Noapte = value;
					this.SendPropertyChanged("Pret_Noapte");
					this.OnPret_NoapteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Camere_Rezervari_Camere", Storage="_Rezervari_Cameres", ThisKey="ID_Camera", OtherKey="ID_Camera")]
		public EntitySet<Rezervari_Camere> Rezervari_Cameres
		{
			get
			{
				return this._Rezervari_Cameres;
			}
			set
			{
				this._Rezervari_Cameres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rezervari_Cameres(Rezervari_Camere entity)
		{
			this.SendPropertyChanging();
			entity.Camere = this;
		}
		
		private void detach_Rezervari_Cameres(Rezervari_Camere entity)
		{
			this.SendPropertyChanging();
			entity.Camere = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clienti")]
	public partial class Clienti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Client;
		
		private string _Email;
		
		private string _Telefon;
		
		private string _Nume;
		
		private string _Username;
		
		private string _Parola;
		
		private EntitySet<Plati> _Platis;
		
		private EntitySet<Recenzii> _Recenziis;
		
		private EntitySet<Rezervari> _Rezervaris;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ClientChanging(int value);
    partial void OnID_ClientChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnParolaChanging(string value);
    partial void OnParolaChanged();
    #endregion
		
		public Clienti()
		{
			this._Platis = new EntitySet<Plati>(new Action<Plati>(this.attach_Platis), new Action<Plati>(this.detach_Platis));
			this._Recenziis = new EntitySet<Recenzii>(new Action<Recenzii>(this.attach_Recenziis), new Action<Recenzii>(this.detach_Recenziis));
			this._Rezervaris = new EntitySet<Rezervari>(new Action<Rezervari>(this.attach_Rezervaris), new Action<Rezervari>(this.detach_Rezervaris));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Client", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Client
		{
			get
			{
				return this._ID_Client;
			}
			set
			{
				if ((this._ID_Client != value))
				{
					this.OnID_ClientChanging(value);
					this.SendPropertyChanging();
					this._ID_Client = value;
					this.SendPropertyChanged("ID_Client");
					this.OnID_ClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(20)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="VarChar(50)")]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parola", DbType="VarChar(50)")]
		public string Parola
		{
			get
			{
				return this._Parola;
			}
			set
			{
				if ((this._Parola != value))
				{
					this.OnParolaChanging(value);
					this.SendPropertyChanging();
					this._Parola = value;
					this.SendPropertyChanged("Parola");
					this.OnParolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Plati", Storage="_Platis", ThisKey="ID_Client", OtherKey="ID_Client")]
		public EntitySet<Plati> Platis
		{
			get
			{
				return this._Platis;
			}
			set
			{
				this._Platis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Recenzii", Storage="_Recenziis", ThisKey="ID_Client", OtherKey="ID_Client")]
		public EntitySet<Recenzii> Recenziis
		{
			get
			{
				return this._Recenziis;
			}
			set
			{
				this._Recenziis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Rezervari", Storage="_Rezervaris", ThisKey="ID_Client", OtherKey="ID_Client")]
		public EntitySet<Rezervari> Rezervaris
		{
			get
			{
				return this._Rezervaris;
			}
			set
			{
				this._Rezervaris.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Platis(Plati entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = this;
		}
		
		private void detach_Platis(Plati entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = null;
		}
		
		private void attach_Recenziis(Recenzii entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = this;
		}
		
		private void detach_Recenziis(Recenzii entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = null;
		}
		
		private void attach_Rezervaris(Rezervari entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = this;
		}
		
		private void detach_Rezervaris(Rezervari entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Controale_Calitate")]
	public partial class Controale_Calitate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Control;
		
		private string _Tip_Control;
		
		private System.Nullable<System.DateTime> _Data_Controlului;
		
		private System.Nullable<int> _ID_Raport;
		
		private EntityRef<Rapoarte> _Rapoarte;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ControlChanging(int value);
    partial void OnID_ControlChanged();
    partial void OnTip_ControlChanging(string value);
    partial void OnTip_ControlChanged();
    partial void OnData_ControluluiChanging(System.Nullable<System.DateTime> value);
    partial void OnData_ControluluiChanged();
    partial void OnID_RaportChanging(System.Nullable<int> value);
    partial void OnID_RaportChanged();
    #endregion
		
		public Controale_Calitate()
		{
			this._Rapoarte = default(EntityRef<Rapoarte>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Control", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Control
		{
			get
			{
				return this._ID_Control;
			}
			set
			{
				if ((this._ID_Control != value))
				{
					this.OnID_ControlChanging(value);
					this.SendPropertyChanging();
					this._ID_Control = value;
					this.SendPropertyChanged("ID_Control");
					this.OnID_ControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tip_Control", DbType="VarChar(50)")]
		public string Tip_Control
		{
			get
			{
				return this._Tip_Control;
			}
			set
			{
				if ((this._Tip_Control != value))
				{
					this.OnTip_ControlChanging(value);
					this.SendPropertyChanging();
					this._Tip_Control = value;
					this.SendPropertyChanged("Tip_Control");
					this.OnTip_ControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Controlului", DbType="Date")]
		public System.Nullable<System.DateTime> Data_Controlului
		{
			get
			{
				return this._Data_Controlului;
			}
			set
			{
				if ((this._Data_Controlului != value))
				{
					this.OnData_ControluluiChanging(value);
					this.SendPropertyChanging();
					this._Data_Controlului = value;
					this.SendPropertyChanged("Data_Controlului");
					this.OnData_ControluluiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Raport", DbType="Int")]
		public System.Nullable<int> ID_Raport
		{
			get
			{
				return this._ID_Raport;
			}
			set
			{
				if ((this._ID_Raport != value))
				{
					if (this._Rapoarte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RaportChanging(value);
					this.SendPropertyChanging();
					this._ID_Raport = value;
					this.SendPropertyChanged("ID_Raport");
					this.OnID_RaportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rapoarte_Controale_Calitate", Storage="_Rapoarte", ThisKey="ID_Raport", OtherKey="ID_Raport", IsForeignKey=true)]
		public Rapoarte Rapoarte
		{
			get
			{
				return this._Rapoarte.Entity;
			}
			set
			{
				Rapoarte previousValue = this._Rapoarte.Entity;
				if (((previousValue != value) 
							|| (this._Rapoarte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rapoarte.Entity = null;
						previousValue.Controale_Calitates.Remove(this);
					}
					this._Rapoarte.Entity = value;
					if ((value != null))
					{
						value.Controale_Calitates.Add(this);
						this._ID_Raport = value.ID_Raport;
					}
					else
					{
						this._ID_Raport = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rapoarte");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detalii_Achizitie")]
	public partial class Detalii_Achizitie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_Produs;
		
		private System.Nullable<int> _ID_Furnizor;
		
		private System.Nullable<int> _Cantitate;
		
		private EntitySet<Achizitii> _Achizitiis;
		
		private EntityRef<Furnizori> _Furnizori;
		
		private EntityRef<Produse> _Produse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ProdusChanging(System.Nullable<int> value);
    partial void OnID_ProdusChanged();
    partial void OnID_FurnizorChanging(System.Nullable<int> value);
    partial void OnID_FurnizorChanged();
    partial void OnCantitateChanging(System.Nullable<int> value);
    partial void OnCantitateChanged();
    #endregion
		
		public Detalii_Achizitie()
		{
			this._Achizitiis = new EntitySet<Achizitii>(new Action<Achizitii>(this.attach_Achizitiis), new Action<Achizitii>(this.detach_Achizitiis));
			this._Furnizori = default(EntityRef<Furnizori>);
			this._Produse = default(EntityRef<Produse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Produs", DbType="Int")]
		public System.Nullable<int> ID_Produs
		{
			get
			{
				return this._ID_Produs;
			}
			set
			{
				if ((this._ID_Produs != value))
				{
					if (this._Produse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProdusChanging(value);
					this.SendPropertyChanging();
					this._ID_Produs = value;
					this.SendPropertyChanged("ID_Produs");
					this.OnID_ProdusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Furnizor", DbType="Int")]
		public System.Nullable<int> ID_Furnizor
		{
			get
			{
				return this._ID_Furnizor;
			}
			set
			{
				if ((this._ID_Furnizor != value))
				{
					if (this._Furnizori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_FurnizorChanging(value);
					this.SendPropertyChanging();
					this._ID_Furnizor = value;
					this.SendPropertyChanged("ID_Furnizor");
					this.OnID_FurnizorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantitate", DbType="Int")]
		public System.Nullable<int> Cantitate
		{
			get
			{
				return this._Cantitate;
			}
			set
			{
				if ((this._Cantitate != value))
				{
					this.OnCantitateChanging(value);
					this.SendPropertyChanging();
					this._Cantitate = value;
					this.SendPropertyChanged("Cantitate");
					this.OnCantitateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Detalii_Achizitie_Achizitii", Storage="_Achizitiis", ThisKey="ID", OtherKey="ID_Detalii_Achizitie")]
		public EntitySet<Achizitii> Achizitiis
		{
			get
			{
				return this._Achizitiis;
			}
			set
			{
				this._Achizitiis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Furnizori_Detalii_Achizitie", Storage="_Furnizori", ThisKey="ID_Furnizor", OtherKey="ID_Furnizor", IsForeignKey=true)]
		public Furnizori Furnizori
		{
			get
			{
				return this._Furnizori.Entity;
			}
			set
			{
				Furnizori previousValue = this._Furnizori.Entity;
				if (((previousValue != value) 
							|| (this._Furnizori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Furnizori.Entity = null;
						previousValue.Detalii_Achizities.Remove(this);
					}
					this._Furnizori.Entity = value;
					if ((value != null))
					{
						value.Detalii_Achizities.Add(this);
						this._ID_Furnizor = value.ID_Furnizor;
					}
					else
					{
						this._ID_Furnizor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Furnizori");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produse_Detalii_Achizitie", Storage="_Produse", ThisKey="ID_Produs", OtherKey="ID_Produs", IsForeignKey=true)]
		public Produse Produse
		{
			get
			{
				return this._Produse.Entity;
			}
			set
			{
				Produse previousValue = this._Produse.Entity;
				if (((previousValue != value) 
							|| (this._Produse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produse.Entity = null;
						previousValue.Detalii_Achizities.Remove(this);
					}
					this._Produse.Entity = value;
					if ((value != null))
					{
						value.Detalii_Achizities.Add(this);
						this._ID_Produs = value.ID_Produs;
					}
					else
					{
						this._ID_Produs = default(Nullable<int>);
					}
					this.SendPropertyChanged("Produse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Achizitiis(Achizitii entity)
		{
			this.SendPropertyChanging();
			entity.Detalii_Achizitie = this;
		}
		
		private void detach_Achizitiis(Achizitii entity)
		{
			this.SendPropertyChanging();
			entity.Detalii_Achizitie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Functii")]
	public partial class Functii : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Functie;
		
		private string _Nume;
		
		private System.Nullable<decimal> _Renumeratie;
		
		private string _Departament;
		
		private EntitySet<Angajati> _Angajatis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FunctieChanging(int value);
    partial void OnID_FunctieChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnRenumeratieChanging(System.Nullable<decimal> value);
    partial void OnRenumeratieChanged();
    partial void OnDepartamentChanging(string value);
    partial void OnDepartamentChanged();
    #endregion
		
		public Functii()
		{
			this._Angajatis = new EntitySet<Angajati>(new Action<Angajati>(this.attach_Angajatis), new Action<Angajati>(this.detach_Angajatis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Functie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Functie
		{
			get
			{
				return this._ID_Functie;
			}
			set
			{
				if ((this._ID_Functie != value))
				{
					this.OnID_FunctieChanging(value);
					this.SendPropertyChanging();
					this._ID_Functie = value;
					this.SendPropertyChanged("ID_Functie");
					this.OnID_FunctieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="VarChar(50)")]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Renumeratie", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Renumeratie
		{
			get
			{
				return this._Renumeratie;
			}
			set
			{
				if ((this._Renumeratie != value))
				{
					this.OnRenumeratieChanging(value);
					this.SendPropertyChanging();
					this._Renumeratie = value;
					this.SendPropertyChanged("Renumeratie");
					this.OnRenumeratieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departament", DbType="VarChar(50)")]
		public string Departament
		{
			get
			{
				return this._Departament;
			}
			set
			{
				if ((this._Departament != value))
				{
					this.OnDepartamentChanging(value);
					this.SendPropertyChanging();
					this._Departament = value;
					this.SendPropertyChanged("Departament");
					this.OnDepartamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Functii_Angajati", Storage="_Angajatis", ThisKey="ID_Functie", OtherKey="ID_Functie")]
		public EntitySet<Angajati> Angajatis
		{
			get
			{
				return this._Angajatis;
			}
			set
			{
				this._Angajatis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Angajatis(Angajati entity)
		{
			this.SendPropertyChanging();
			entity.Functii = this;
		}
		
		private void detach_Angajatis(Angajati entity)
		{
			this.SendPropertyChanging();
			entity.Functii = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Furnizori")]
	public partial class Furnizori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Furnizor;
		
		private string _Nume;
		
		private string _Sediu;
		
		private EntitySet<Detalii_Achizitie> _Detalii_Achizities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FurnizorChanging(int value);
    partial void OnID_FurnizorChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnSediuChanging(string value);
    partial void OnSediuChanged();
    #endregion
		
		public Furnizori()
		{
			this._Detalii_Achizities = new EntitySet<Detalii_Achizitie>(new Action<Detalii_Achizitie>(this.attach_Detalii_Achizities), new Action<Detalii_Achizitie>(this.detach_Detalii_Achizities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Furnizor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Furnizor
		{
			get
			{
				return this._ID_Furnizor;
			}
			set
			{
				if ((this._ID_Furnizor != value))
				{
					this.OnID_FurnizorChanging(value);
					this.SendPropertyChanging();
					this._ID_Furnizor = value;
					this.SendPropertyChanged("ID_Furnizor");
					this.OnID_FurnizorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="VarChar(50)")]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sediu", DbType="VarChar(100)")]
		public string Sediu
		{
			get
			{
				return this._Sediu;
			}
			set
			{
				if ((this._Sediu != value))
				{
					this.OnSediuChanging(value);
					this.SendPropertyChanging();
					this._Sediu = value;
					this.SendPropertyChanged("Sediu");
					this.OnSediuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Furnizori_Detalii_Achizitie", Storage="_Detalii_Achizities", ThisKey="ID_Furnizor", OtherKey="ID_Furnizor")]
		public EntitySet<Detalii_Achizitie> Detalii_Achizities
		{
			get
			{
				return this._Detalii_Achizities;
			}
			set
			{
				this._Detalii_Achizities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalii_Achizities(Detalii_Achizitie entity)
		{
			this.SendPropertyChanging();
			entity.Furnizori = this;
		}
		
		private void detach_Detalii_Achizities(Detalii_Achizitie entity)
		{
			this.SendPropertyChanging();
			entity.Furnizori = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Plati")]
	public partial class Plati : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Plata;
		
		private System.Nullable<int> _ID_Rezervare;
		
		private System.Nullable<int> _ID_Client;
		
		private System.Nullable<int> _ID_Angajat;
		
		private System.Nullable<decimal> _Suma_Totala;
		
		private System.Nullable<System.DateTime> _Data_Tranzactiei;
		
		private string _Tipul_Tranzactiei;
		
		private EntityRef<Angajati> _Angajati;
		
		private EntityRef<Clienti> _Clienti;
		
		private EntityRef<Rezervari> _Rezervari;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PlataChanging(int value);
    partial void OnID_PlataChanged();
    partial void OnID_RezervareChanging(System.Nullable<int> value);
    partial void OnID_RezervareChanged();
    partial void OnID_ClientChanging(System.Nullable<int> value);
    partial void OnID_ClientChanged();
    partial void OnID_AngajatChanging(System.Nullable<int> value);
    partial void OnID_AngajatChanged();
    partial void OnSuma_TotalaChanging(System.Nullable<decimal> value);
    partial void OnSuma_TotalaChanged();
    partial void OnData_TranzactieiChanging(System.Nullable<System.DateTime> value);
    partial void OnData_TranzactieiChanged();
    partial void OnTipul_TranzactieiChanging(string value);
    partial void OnTipul_TranzactieiChanged();
    #endregion
		
		public Plati()
		{
			this._Angajati = default(EntityRef<Angajati>);
			this._Clienti = default(EntityRef<Clienti>);
			this._Rezervari = default(EntityRef<Rezervari>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Plata", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Plata
		{
			get
			{
				return this._ID_Plata;
			}
			set
			{
				if ((this._ID_Plata != value))
				{
					this.OnID_PlataChanging(value);
					this.SendPropertyChanging();
					this._ID_Plata = value;
					this.SendPropertyChanged("ID_Plata");
					this.OnID_PlataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Rezervare", DbType="Int")]
		public System.Nullable<int> ID_Rezervare
		{
			get
			{
				return this._ID_Rezervare;
			}
			set
			{
				if ((this._ID_Rezervare != value))
				{
					if (this._Rezervari.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RezervareChanging(value);
					this.SendPropertyChanging();
					this._ID_Rezervare = value;
					this.SendPropertyChanged("ID_Rezervare");
					this.OnID_RezervareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Client", DbType="Int")]
		public System.Nullable<int> ID_Client
		{
			get
			{
				return this._ID_Client;
			}
			set
			{
				if ((this._ID_Client != value))
				{
					if (this._Clienti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClientChanging(value);
					this.SendPropertyChanging();
					this._ID_Client = value;
					this.SendPropertyChanged("ID_Client");
					this.OnID_ClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Angajat", DbType="Int")]
		public System.Nullable<int> ID_Angajat
		{
			get
			{
				return this._ID_Angajat;
			}
			set
			{
				if ((this._ID_Angajat != value))
				{
					if (this._Angajati.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AngajatChanging(value);
					this.SendPropertyChanging();
					this._ID_Angajat = value;
					this.SendPropertyChanged("ID_Angajat");
					this.OnID_AngajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suma_Totala", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Suma_Totala
		{
			get
			{
				return this._Suma_Totala;
			}
			set
			{
				if ((this._Suma_Totala != value))
				{
					this.OnSuma_TotalaChanging(value);
					this.SendPropertyChanging();
					this._Suma_Totala = value;
					this.SendPropertyChanged("Suma_Totala");
					this.OnSuma_TotalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Tranzactiei", DbType="Date")]
		public System.Nullable<System.DateTime> Data_Tranzactiei
		{
			get
			{
				return this._Data_Tranzactiei;
			}
			set
			{
				if ((this._Data_Tranzactiei != value))
				{
					this.OnData_TranzactieiChanging(value);
					this.SendPropertyChanging();
					this._Data_Tranzactiei = value;
					this.SendPropertyChanged("Data_Tranzactiei");
					this.OnData_TranzactieiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipul_Tranzactiei", DbType="VarChar(10)")]
		public string Tipul_Tranzactiei
		{
			get
			{
				return this._Tipul_Tranzactiei;
			}
			set
			{
				if ((this._Tipul_Tranzactiei != value))
				{
					this.OnTipul_TranzactieiChanging(value);
					this.SendPropertyChanging();
					this._Tipul_Tranzactiei = value;
					this.SendPropertyChanged("Tipul_Tranzactiei");
					this.OnTipul_TranzactieiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajati_Plati", Storage="_Angajati", ThisKey="ID_Angajat", OtherKey="ID_Angajat", IsForeignKey=true)]
		public Angajati Angajati
		{
			get
			{
				return this._Angajati.Entity;
			}
			set
			{
				Angajati previousValue = this._Angajati.Entity;
				if (((previousValue != value) 
							|| (this._Angajati.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajati.Entity = null;
						previousValue.Platis.Remove(this);
					}
					this._Angajati.Entity = value;
					if ((value != null))
					{
						value.Platis.Add(this);
						this._ID_Angajat = value.ID_Angajat;
					}
					else
					{
						this._ID_Angajat = default(Nullable<int>);
					}
					this.SendPropertyChanged("Angajati");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Plati", Storage="_Clienti", ThisKey="ID_Client", OtherKey="ID_Client", IsForeignKey=true)]
		public Clienti Clienti
		{
			get
			{
				return this._Clienti.Entity;
			}
			set
			{
				Clienti previousValue = this._Clienti.Entity;
				if (((previousValue != value) 
							|| (this._Clienti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clienti.Entity = null;
						previousValue.Platis.Remove(this);
					}
					this._Clienti.Entity = value;
					if ((value != null))
					{
						value.Platis.Add(this);
						this._ID_Client = value.ID_Client;
					}
					else
					{
						this._ID_Client = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clienti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rezervari_Plati", Storage="_Rezervari", ThisKey="ID_Rezervare", OtherKey="ID_Rezervare", IsForeignKey=true)]
		public Rezervari Rezervari
		{
			get
			{
				return this._Rezervari.Entity;
			}
			set
			{
				Rezervari previousValue = this._Rezervari.Entity;
				if (((previousValue != value) 
							|| (this._Rezervari.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rezervari.Entity = null;
						previousValue.Platis.Remove(this);
					}
					this._Rezervari.Entity = value;
					if ((value != null))
					{
						value.Platis.Add(this);
						this._ID_Rezervare = value.ID_Rezervare;
					}
					else
					{
						this._ID_Rezervare = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rezervari");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produse")]
	public partial class Produse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Produs;
		
		private string _Nume;
		
		private System.Nullable<int> _Cantitate;
		
		private System.Nullable<int> _Cantitate_Minima;
		
		private EntitySet<Detalii_Achizitie> _Detalii_Achizities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProdusChanging(int value);
    partial void OnID_ProdusChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnCantitateChanging(System.Nullable<int> value);
    partial void OnCantitateChanged();
    partial void OnCantitate_MinimaChanging(System.Nullable<int> value);
    partial void OnCantitate_MinimaChanged();
    #endregion
		
		public Produse()
		{
			this._Detalii_Achizities = new EntitySet<Detalii_Achizitie>(new Action<Detalii_Achizitie>(this.attach_Detalii_Achizities), new Action<Detalii_Achizitie>(this.detach_Detalii_Achizities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Produs", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Produs
		{
			get
			{
				return this._ID_Produs;
			}
			set
			{
				if ((this._ID_Produs != value))
				{
					this.OnID_ProdusChanging(value);
					this.SendPropertyChanging();
					this._ID_Produs = value;
					this.SendPropertyChanged("ID_Produs");
					this.OnID_ProdusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(50)")]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantitate", DbType="Int")]
		public System.Nullable<int> Cantitate
		{
			get
			{
				return this._Cantitate;
			}
			set
			{
				if ((this._Cantitate != value))
				{
					this.OnCantitateChanging(value);
					this.SendPropertyChanging();
					this._Cantitate = value;
					this.SendPropertyChanged("Cantitate");
					this.OnCantitateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantitate_Minima", DbType="Int")]
		public System.Nullable<int> Cantitate_Minima
		{
			get
			{
				return this._Cantitate_Minima;
			}
			set
			{
				if ((this._Cantitate_Minima != value))
				{
					this.OnCantitate_MinimaChanging(value);
					this.SendPropertyChanging();
					this._Cantitate_Minima = value;
					this.SendPropertyChanged("Cantitate_Minima");
					this.OnCantitate_MinimaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produse_Detalii_Achizitie", Storage="_Detalii_Achizities", ThisKey="ID_Produs", OtherKey="ID_Produs")]
		public EntitySet<Detalii_Achizitie> Detalii_Achizities
		{
			get
			{
				return this._Detalii_Achizities;
			}
			set
			{
				this._Detalii_Achizities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalii_Achizities(Detalii_Achizitie entity)
		{
			this.SendPropertyChanging();
			entity.Produse = this;
		}
		
		private void detach_Detalii_Achizities(Detalii_Achizitie entity)
		{
			this.SendPropertyChanging();
			entity.Produse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rapoarte")]
	public partial class Rapoarte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Raport;
		
		private string _Inspector_Responsabil;
		
		private string _Verdict;
		
		private string _Sectoare_Verificate;
		
		private System.Nullable<int> _ID_Angajat;
		
		private EntitySet<Controale_Calitate> _Controale_Calitates;
		
		private EntityRef<Angajati> _Angajati;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RaportChanging(int value);
    partial void OnID_RaportChanged();
    partial void OnInspector_ResponsabilChanging(string value);
    partial void OnInspector_ResponsabilChanged();
    partial void OnVerdictChanging(string value);
    partial void OnVerdictChanged();
    partial void OnSectoare_VerificateChanging(string value);
    partial void OnSectoare_VerificateChanged();
    partial void OnID_AngajatChanging(System.Nullable<int> value);
    partial void OnID_AngajatChanged();
    #endregion
		
		public Rapoarte()
		{
			this._Controale_Calitates = new EntitySet<Controale_Calitate>(new Action<Controale_Calitate>(this.attach_Controale_Calitates), new Action<Controale_Calitate>(this.detach_Controale_Calitates));
			this._Angajati = default(EntityRef<Angajati>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Raport", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Raport
		{
			get
			{
				return this._ID_Raport;
			}
			set
			{
				if ((this._ID_Raport != value))
				{
					this.OnID_RaportChanging(value);
					this.SendPropertyChanging();
					this._ID_Raport = value;
					this.SendPropertyChanged("ID_Raport");
					this.OnID_RaportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inspector_Responsabil", DbType="NVarChar(50)")]
		public string Inspector_Responsabil
		{
			get
			{
				return this._Inspector_Responsabil;
			}
			set
			{
				if ((this._Inspector_Responsabil != value))
				{
					this.OnInspector_ResponsabilChanging(value);
					this.SendPropertyChanging();
					this._Inspector_Responsabil = value;
					this.SendPropertyChanged("Inspector_Responsabil");
					this.OnInspector_ResponsabilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verdict", DbType="VarChar(20)")]
		public string Verdict
		{
			get
			{
				return this._Verdict;
			}
			set
			{
				if ((this._Verdict != value))
				{
					this.OnVerdictChanging(value);
					this.SendPropertyChanging();
					this._Verdict = value;
					this.SendPropertyChanged("Verdict");
					this.OnVerdictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sectoare_Verificate", DbType="VarChar(100)")]
		public string Sectoare_Verificate
		{
			get
			{
				return this._Sectoare_Verificate;
			}
			set
			{
				if ((this._Sectoare_Verificate != value))
				{
					this.OnSectoare_VerificateChanging(value);
					this.SendPropertyChanging();
					this._Sectoare_Verificate = value;
					this.SendPropertyChanged("Sectoare_Verificate");
					this.OnSectoare_VerificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Angajat", DbType="Int")]
		public System.Nullable<int> ID_Angajat
		{
			get
			{
				return this._ID_Angajat;
			}
			set
			{
				if ((this._ID_Angajat != value))
				{
					if (this._Angajati.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AngajatChanging(value);
					this.SendPropertyChanging();
					this._ID_Angajat = value;
					this.SendPropertyChanged("ID_Angajat");
					this.OnID_AngajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rapoarte_Controale_Calitate", Storage="_Controale_Calitates", ThisKey="ID_Raport", OtherKey="ID_Raport")]
		public EntitySet<Controale_Calitate> Controale_Calitates
		{
			get
			{
				return this._Controale_Calitates;
			}
			set
			{
				this._Controale_Calitates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajati_Rapoarte", Storage="_Angajati", ThisKey="ID_Angajat", OtherKey="ID_Angajat", IsForeignKey=true)]
		public Angajati Angajati
		{
			get
			{
				return this._Angajati.Entity;
			}
			set
			{
				Angajati previousValue = this._Angajati.Entity;
				if (((previousValue != value) 
							|| (this._Angajati.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajati.Entity = null;
						previousValue.Rapoartes.Remove(this);
					}
					this._Angajati.Entity = value;
					if ((value != null))
					{
						value.Rapoartes.Add(this);
						this._ID_Angajat = value.ID_Angajat;
					}
					else
					{
						this._ID_Angajat = default(Nullable<int>);
					}
					this.SendPropertyChanged("Angajati");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Controale_Calitates(Controale_Calitate entity)
		{
			this.SendPropertyChanging();
			entity.Rapoarte = this;
		}
		
		private void detach_Controale_Calitates(Controale_Calitate entity)
		{
			this.SendPropertyChanging();
			entity.Rapoarte = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recenzii")]
	public partial class Recenzii : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Recenzie;
		
		private System.Nullable<int> _ID_Client;
		
		private System.Nullable<byte> _Nota;
		
		private string _Descriere_Text;
		
		private EntityRef<Clienti> _Clienti;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RecenzieChanging(int value);
    partial void OnID_RecenzieChanged();
    partial void OnID_ClientChanging(System.Nullable<int> value);
    partial void OnID_ClientChanged();
    partial void OnNotaChanging(System.Nullable<byte> value);
    partial void OnNotaChanged();
    partial void OnDescriere_TextChanging(string value);
    partial void OnDescriere_TextChanged();
    #endregion
		
		public Recenzii()
		{
			this._Clienti = default(EntityRef<Clienti>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Recenzie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Recenzie
		{
			get
			{
				return this._ID_Recenzie;
			}
			set
			{
				if ((this._ID_Recenzie != value))
				{
					this.OnID_RecenzieChanging(value);
					this.SendPropertyChanging();
					this._ID_Recenzie = value;
					this.SendPropertyChanged("ID_Recenzie");
					this.OnID_RecenzieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Client", DbType="Int")]
		public System.Nullable<int> ID_Client
		{
			get
			{
				return this._ID_Client;
			}
			set
			{
				if ((this._ID_Client != value))
				{
					if (this._Clienti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClientChanging(value);
					this.SendPropertyChanging();
					this._ID_Client = value;
					this.SendPropertyChanged("ID_Client");
					this.OnID_ClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nota", DbType="TinyInt")]
		public System.Nullable<byte> Nota
		{
			get
			{
				return this._Nota;
			}
			set
			{
				if ((this._Nota != value))
				{
					this.OnNotaChanging(value);
					this.SendPropertyChanging();
					this._Nota = value;
					this.SendPropertyChanged("Nota");
					this.OnNotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriere_Text", DbType="NVarChar(MAX)")]
		public string Descriere_Text
		{
			get
			{
				return this._Descriere_Text;
			}
			set
			{
				if ((this._Descriere_Text != value))
				{
					this.OnDescriere_TextChanging(value);
					this.SendPropertyChanging();
					this._Descriere_Text = value;
					this.SendPropertyChanged("Descriere_Text");
					this.OnDescriere_TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Recenzii", Storage="_Clienti", ThisKey="ID_Client", OtherKey="ID_Client", IsForeignKey=true)]
		public Clienti Clienti
		{
			get
			{
				return this._Clienti.Entity;
			}
			set
			{
				Clienti previousValue = this._Clienti.Entity;
				if (((previousValue != value) 
							|| (this._Clienti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clienti.Entity = null;
						previousValue.Recenziis.Remove(this);
					}
					this._Clienti.Entity = value;
					if ((value != null))
					{
						value.Recenziis.Add(this);
						this._ID_Client = value.ID_Client;
					}
					else
					{
						this._ID_Client = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clienti");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rezervari")]
	public partial class Rezervari : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Rezervare;
		
		private System.Nullable<int> _ID_Client;
		
		private System.Nullable<System.DateTime> _Data_Rezervarii;
		
		private System.Nullable<int> _Durata_Cazarii;
		
		private System.Nullable<System.DateTime> _Check_In;
		
		private System.Nullable<System.DateTime> _Check_Out;
		
		private string _All_Inclusive;
		
		private string _Half_Board;
		
		private string _Acces_Spa;
		
		private string _Acces_Piscina;
		
		private string _Status_Plata;
		
		private EntitySet<Plati> _Platis;
		
		private EntitySet<Rezervari_Camere> _Rezervari_Cameres;
		
		private EntityRef<Clienti> _Clienti;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RezervareChanging(int value);
    partial void OnID_RezervareChanged();
    partial void OnID_ClientChanging(System.Nullable<int> value);
    partial void OnID_ClientChanged();
    partial void OnData_RezervariiChanging(System.Nullable<System.DateTime> value);
    partial void OnData_RezervariiChanged();
    partial void OnDurata_CazariiChanging(System.Nullable<int> value);
    partial void OnDurata_CazariiChanged();
    partial void OnCheck_InChanging(System.Nullable<System.DateTime> value);
    partial void OnCheck_InChanged();
    partial void OnCheck_OutChanging(System.Nullable<System.DateTime> value);
    partial void OnCheck_OutChanged();
    partial void OnAll_InclusiveChanging(string value);
    partial void OnAll_InclusiveChanged();
    partial void OnHalf_BoardChanging(string value);
    partial void OnHalf_BoardChanged();
    partial void OnAcces_SpaChanging(string value);
    partial void OnAcces_SpaChanged();
    partial void OnAcces_PiscinaChanging(string value);
    partial void OnAcces_PiscinaChanged();
    partial void OnStatus_PlataChanging(string value);
    partial void OnStatus_PlataChanged();
    #endregion
		
		public Rezervari()
		{
			this._Platis = new EntitySet<Plati>(new Action<Plati>(this.attach_Platis), new Action<Plati>(this.detach_Platis));
			this._Rezervari_Cameres = new EntitySet<Rezervari_Camere>(new Action<Rezervari_Camere>(this.attach_Rezervari_Cameres), new Action<Rezervari_Camere>(this.detach_Rezervari_Cameres));
			this._Clienti = default(EntityRef<Clienti>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Rezervare", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Rezervare
		{
			get
			{
				return this._ID_Rezervare;
			}
			set
			{
				if ((this._ID_Rezervare != value))
				{
					this.OnID_RezervareChanging(value);
					this.SendPropertyChanging();
					this._ID_Rezervare = value;
					this.SendPropertyChanged("ID_Rezervare");
					this.OnID_RezervareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Client", DbType="Int")]
		public System.Nullable<int> ID_Client
		{
			get
			{
				return this._ID_Client;
			}
			set
			{
				if ((this._ID_Client != value))
				{
					if (this._Clienti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClientChanging(value);
					this.SendPropertyChanging();
					this._ID_Client = value;
					this.SendPropertyChanged("ID_Client");
					this.OnID_ClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Rezervarii", DbType="Date")]
		public System.Nullable<System.DateTime> Data_Rezervarii
		{
			get
			{
				return this._Data_Rezervarii;
			}
			set
			{
				if ((this._Data_Rezervarii != value))
				{
					this.OnData_RezervariiChanging(value);
					this.SendPropertyChanging();
					this._Data_Rezervarii = value;
					this.SendPropertyChanged("Data_Rezervarii");
					this.OnData_RezervariiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durata_Cazarii", DbType="Int")]
		public System.Nullable<int> Durata_Cazarii
		{
			get
			{
				return this._Durata_Cazarii;
			}
			set
			{
				if ((this._Durata_Cazarii != value))
				{
					this.OnDurata_CazariiChanging(value);
					this.SendPropertyChanging();
					this._Durata_Cazarii = value;
					this.SendPropertyChanged("Durata_Cazarii");
					this.OnDurata_CazariiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Check_In", DbType="Date")]
		public System.Nullable<System.DateTime> Check_In
		{
			get
			{
				return this._Check_In;
			}
			set
			{
				if ((this._Check_In != value))
				{
					this.OnCheck_InChanging(value);
					this.SendPropertyChanging();
					this._Check_In = value;
					this.SendPropertyChanged("Check_In");
					this.OnCheck_InChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Check_Out", DbType="Date")]
		public System.Nullable<System.DateTime> Check_Out
		{
			get
			{
				return this._Check_Out;
			}
			set
			{
				if ((this._Check_Out != value))
				{
					this.OnCheck_OutChanging(value);
					this.SendPropertyChanging();
					this._Check_Out = value;
					this.SendPropertyChanged("Check_Out");
					this.OnCheck_OutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_All_Inclusive", DbType="VarChar(3)")]
		public string All_Inclusive
		{
			get
			{
				return this._All_Inclusive;
			}
			set
			{
				if ((this._All_Inclusive != value))
				{
					this.OnAll_InclusiveChanging(value);
					this.SendPropertyChanging();
					this._All_Inclusive = value;
					this.SendPropertyChanged("All_Inclusive");
					this.OnAll_InclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Half_Board", DbType="VarChar(3)")]
		public string Half_Board
		{
			get
			{
				return this._Half_Board;
			}
			set
			{
				if ((this._Half_Board != value))
				{
					this.OnHalf_BoardChanging(value);
					this.SendPropertyChanging();
					this._Half_Board = value;
					this.SendPropertyChanged("Half_Board");
					this.OnHalf_BoardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acces_Spa", DbType="VarChar(3)")]
		public string Acces_Spa
		{
			get
			{
				return this._Acces_Spa;
			}
			set
			{
				if ((this._Acces_Spa != value))
				{
					this.OnAcces_SpaChanging(value);
					this.SendPropertyChanging();
					this._Acces_Spa = value;
					this.SendPropertyChanged("Acces_Spa");
					this.OnAcces_SpaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acces_Piscina", DbType="VarChar(3)")]
		public string Acces_Piscina
		{
			get
			{
				return this._Acces_Piscina;
			}
			set
			{
				if ((this._Acces_Piscina != value))
				{
					this.OnAcces_PiscinaChanging(value);
					this.SendPropertyChanging();
					this._Acces_Piscina = value;
					this.SendPropertyChanged("Acces_Piscina");
					this.OnAcces_PiscinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Plata", DbType="VarChar(3)")]
		public string Status_Plata
		{
			get
			{
				return this._Status_Plata;
			}
			set
			{
				if ((this._Status_Plata != value))
				{
					this.OnStatus_PlataChanging(value);
					this.SendPropertyChanging();
					this._Status_Plata = value;
					this.SendPropertyChanged("Status_Plata");
					this.OnStatus_PlataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rezervari_Plati", Storage="_Platis", ThisKey="ID_Rezervare", OtherKey="ID_Rezervare")]
		public EntitySet<Plati> Platis
		{
			get
			{
				return this._Platis;
			}
			set
			{
				this._Platis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rezervari_Rezervari_Camere", Storage="_Rezervari_Cameres", ThisKey="ID_Rezervare", OtherKey="ID_Rezervare")]
		public EntitySet<Rezervari_Camere> Rezervari_Cameres
		{
			get
			{
				return this._Rezervari_Cameres;
			}
			set
			{
				this._Rezervari_Cameres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Rezervari", Storage="_Clienti", ThisKey="ID_Client", OtherKey="ID_Client", IsForeignKey=true)]
		public Clienti Clienti
		{
			get
			{
				return this._Clienti.Entity;
			}
			set
			{
				Clienti previousValue = this._Clienti.Entity;
				if (((previousValue != value) 
							|| (this._Clienti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clienti.Entity = null;
						previousValue.Rezervaris.Remove(this);
					}
					this._Clienti.Entity = value;
					if ((value != null))
					{
						value.Rezervaris.Add(this);
						this._ID_Client = value.ID_Client;
					}
					else
					{
						this._ID_Client = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clienti");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Platis(Plati entity)
		{
			this.SendPropertyChanging();
			entity.Rezervari = this;
		}
		
		private void detach_Platis(Plati entity)
		{
			this.SendPropertyChanging();
			entity.Rezervari = null;
		}
		
		private void attach_Rezervari_Cameres(Rezervari_Camere entity)
		{
			this.SendPropertyChanging();
			entity.Rezervari = this;
		}
		
		private void detach_Rezervari_Cameres(Rezervari_Camere entity)
		{
			this.SendPropertyChanging();
			entity.Rezervari = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rezervari_Camere")]
	public partial class Rezervari_Camere : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_Rezervare;
		
		private System.Nullable<int> _ID_Camera;
		
		private EntityRef<Camere> _Camere;
		
		private EntityRef<Rezervari> _Rezervari;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_RezervareChanging(System.Nullable<int> value);
    partial void OnID_RezervareChanged();
    partial void OnID_CameraChanging(System.Nullable<int> value);
    partial void OnID_CameraChanged();
    #endregion
		
		public Rezervari_Camere()
		{
			this._Camere = default(EntityRef<Camere>);
			this._Rezervari = default(EntityRef<Rezervari>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Rezervare", DbType="Int")]
		public System.Nullable<int> ID_Rezervare
		{
			get
			{
				return this._ID_Rezervare;
			}
			set
			{
				if ((this._ID_Rezervare != value))
				{
					if (this._Rezervari.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RezervareChanging(value);
					this.SendPropertyChanging();
					this._ID_Rezervare = value;
					this.SendPropertyChanged("ID_Rezervare");
					this.OnID_RezervareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Camera", DbType="Int")]
		public System.Nullable<int> ID_Camera
		{
			get
			{
				return this._ID_Camera;
			}
			set
			{
				if ((this._ID_Camera != value))
				{
					if (this._Camere.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CameraChanging(value);
					this.SendPropertyChanging();
					this._ID_Camera = value;
					this.SendPropertyChanged("ID_Camera");
					this.OnID_CameraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Camere_Rezervari_Camere", Storage="_Camere", ThisKey="ID_Camera", OtherKey="ID_Camera", IsForeignKey=true)]
		public Camere Camere
		{
			get
			{
				return this._Camere.Entity;
			}
			set
			{
				Camere previousValue = this._Camere.Entity;
				if (((previousValue != value) 
							|| (this._Camere.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Camere.Entity = null;
						previousValue.Rezervari_Cameres.Remove(this);
					}
					this._Camere.Entity = value;
					if ((value != null))
					{
						value.Rezervari_Cameres.Add(this);
						this._ID_Camera = value.ID_Camera;
					}
					else
					{
						this._ID_Camera = default(Nullable<int>);
					}
					this.SendPropertyChanged("Camere");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rezervari_Rezervari_Camere", Storage="_Rezervari", ThisKey="ID_Rezervare", OtherKey="ID_Rezervare", IsForeignKey=true)]
		public Rezervari Rezervari
		{
			get
			{
				return this._Rezervari.Entity;
			}
			set
			{
				Rezervari previousValue = this._Rezervari.Entity;
				if (((previousValue != value) 
							|| (this._Rezervari.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rezervari.Entity = null;
						previousValue.Rezervari_Cameres.Remove(this);
					}
					this._Rezervari.Entity = value;
					if ((value != null))
					{
						value.Rezervari_Cameres.Add(this);
						this._ID_Rezervare = value.ID_Rezervare;
					}
					else
					{
						this._ID_Rezervare = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rezervari");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
